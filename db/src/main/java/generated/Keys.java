/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.FlywaySchemaHistory;
import generated.tables.Organization;
import generated.tables.Product;
import generated.tables.Roles;
import generated.tables.UserRoles;
import generated.tables.Users;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.OrganizationRecord;
import generated.tables.records.ProductRecord;
import generated.tables.records.RolesRecord;
import generated.tables.records.UserRolesRecord;
import generated.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PK = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_pk"), new TableField[] { Organization.ORGANIZATION.NAME }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PK = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pk"), new TableField[] { Product.PRODUCT.ID }, true);
    public static final UniqueKey<RolesRecord> ROLES_PK = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_pk"), new TableField[] { Roles.ROLES.ID }, true);
    public static final UniqueKey<UserRolesRecord> USER_ROLES_PK = Internal.createUniqueKey(UserRoles.USER_ROLES, DSL.name("user_roles_pk"), new TableField[] { UserRoles.USER_ROLES.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_PK = Internal.createUniqueKey(Users.USERS, DSL.name("users_pk"), new TableField[] { Users.USERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ProductRecord, OrganizationRecord> PRODUCT__PRODUCT_ORG_FK = Internal.createForeignKey(Product.PRODUCT, DSL.name("product_org_fk"), new TableField[] { Product.PRODUCT.ORGANIZATION }, Keys.ORGANIZATION_PK, new TableField[] { Organization.ORGANIZATION.NAME }, true);
    public static final ForeignKey<UserRolesRecord, RolesRecord> USER_ROLES__UR_FKR = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("ur_fkr"), new TableField[] { UserRoles.USER_ROLES.ROLE_ID }, Keys.ROLES_PK, new TableField[] { Roles.ROLES.ID }, true);
    public static final ForeignKey<UserRolesRecord, UsersRecord> USER_ROLES__UR_FKU = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("ur_fku"), new TableField[] { UserRoles.USER_ROLES.USER_ID }, Keys.USERS_PK, new TableField[] { Users.USERS.ID }, true);
}
